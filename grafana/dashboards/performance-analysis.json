{
  "id": null,
  "title": "MarketSage - Performance Bottleneck Analysis",
  "tags": ["marketsage", "performance", "bottlenecks", "analysis"],
  "timezone": "browser",
  "panels": [
    {
      "id": 1,
      "title": "üîç Slowest Operations (Top 10)",
      "type": "table",
      "targets": [
        {
          "expr": "topk(10, histogram_quantile(0.95, sum by (service_name, span_name, le) (rate(traces_spanmetrics_duration_bucket[5m]))))",
          "format": "table",
          "datasource": "Prometheus"
        }
      ],
      "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0},
      "fieldConfig": {
        "defaults": {
          "unit": "s",
          "custom": {
            "displayMode": "color-background",
            "align": "center"
          },
          "thresholds": {
            "steps": [
              {"color": "green", "value": 0},
              {"color": "yellow", "value": 0.1},
              {"color": "orange", "value": 0.5},
              {"color": "red", "value": 1.0}
            ]
          }
        }
      },
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {},
            "renameByName": {
              "Value": "P95 Latency (s)",
              "service_name": "Service",
              "span_name": "Operation"
            }
          }
        }
      ]
    },
    {
      "id": 2,
      "title": "üö® High Error Rate Operations",
      "type": "table",
      "targets": [
        {
          "expr": "topk(10, (sum by (service_name, span_name) (rate(traces_spanmetrics_calls_total{status_code=\"STATUS_CODE_ERROR\"}[5m])) / sum by (service_name, span_name) (rate(traces_spanmetrics_calls_total[5m]))) * 100)",
          "format": "table",
          "datasource": "Prometheus"
        }
      ],
      "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0},
      "fieldConfig": {
        "defaults": {
          "unit": "percent",
          "custom": {
            "displayMode": "color-background",
            "align": "center"
          },
          "thresholds": {
            "steps": [
              {"color": "green", "value": 0},
              {"color": "yellow", "value": 1},
              {"color": "orange", "value": 5},
              {"color": "red", "value": 10}
            ]
          }
        }
      }
    },
    {
      "id": 3,
      "title": "üìä Resource Utilization vs Performance",
      "type": "timeseries",
      "targets": [
        {
          "expr": "rate(container_cpu_usage_seconds_total{id=~\"/docker/.*\"}[5m]) * 100",
          "legendFormat": "CPU: {{id}}",
          "datasource": "Prometheus"
        },
        {
          "expr": "histogram_quantile(0.95, sum by (service_name) (rate(traces_spanmetrics_duration_bucket[5m]))) * 1000",
          "legendFormat": "P95 Latency (ms): {{service_name}}",
          "datasource": "Prometheus"
        }
      ],
      "gridPos": {"h": 8, "w": 24, "x": 0, "y": 8},
      "fieldConfig": {
        "defaults": {
          "min": 0
        },
        "overrides": [
          {
            "matcher": {"id": "byRegexp", "options": "/CPU.*/"},
            "properties": [
              {"id": "unit", "value": "percent"},
              {"id": "custom.axisPlacement", "value": "left"}
            ]
          },
          {
            "matcher": {"id": "byRegexp", "options": "/.*Latency.*/"},
            "properties": [
              {"id": "unit", "value": "ms"},
              {"id": "custom.axisPlacement", "value": "right"}
            ]
          }
        ]
      }
    },
    {
      "id": 4,
      "title": "üóÑÔ∏è Database Performance Impact",
      "type": "timeseries",
      "targets": [
        {
          "expr": "rate(pg_stat_database_tup_fetched{datname=\"marketsage\"}[5m])",
          "legendFormat": "Rows Fetched/sec",
          "datasource": "Prometheus"
        },
        {
          "expr": "histogram_quantile(0.95, sum by (span_name) (rate(traces_spanmetrics_duration_bucket{span_name=~\".*database.*|.*query.*|.*sql.*\"}[5m])))",
          "legendFormat": "DB Query P95: {{span_name}}",
          "datasource": "Prometheus"
        }
      ],
      "gridPos": {"h": 8, "w": 12, "x": 0, "y": 16},
      "fieldConfig": {
        "defaults": {
          "min": 0
        },
        "overrides": [
          {
            "matcher": {"id": "byRegexp", "options": "/.*Fetched.*/"},
            "properties": [
              {"id": "unit", "value": "rps"},
              {"id": "custom.axisPlacement", "value": "left"}
            ]
          },
          {
            "matcher": {"id": "byRegexp", "options": "/.*P95.*/"},
            "properties": [
              {"id": "unit", "value": "s"},
              {"id": "custom.axisPlacement", "value": "right"}
            ]
          }
        ]
      }
    },
    {
      "id": 5,
      "title": "üíæ Memory vs Performance Correlation",
      "type": "timeseries",
      "targets": [
        {
          "expr": "container_memory_usage_bytes{id=~\"/docker/.*\"} / 1024 / 1024",
          "legendFormat": "Memory MB: {{id}}",
          "datasource": "Prometheus"
        },
        {
          "expr": "rate(traces_spanmetrics_calls_total[5m])",
          "legendFormat": "Request Rate: {{service_name}}",
          "datasource": "Prometheus"
        }
      ],
      "gridPos": {"h": 8, "w": 12, "x": 12, "y": 16},
      "fieldConfig": {
        "defaults": {
          "min": 0
        },
        "overrides": [
          {
            "matcher": {"id": "byRegexp", "options": "/Memory.*/"},
            "properties": [
              {"id": "unit", "value": "decbytes"},
              {"id": "custom.axisPlacement", "value": "left"}
            ]
          },
          {
            "matcher": {"id": "byRegexp", "options": "/Request Rate.*/"},
            "properties": [
              {"id": "unit", "value": "rps"},
              {"id": "custom.axisPlacement", "value": "right"}
            ]
          }
        ]
      }
    },
    {
      "id": 6,
      "title": "‚ö° Critical Path Analysis",
      "type": "nodeGraph",
      "targets": [
        {
          "expr": "traces_service_graph_request_total",
          "datasource": "Prometheus"
        }
      ],
      "gridPos": {"h": 10, "w": 24, "x": 0, "y": 24},
      "options": {
        "nodes": {
          "mainStatUnit": "rps",
          "secondaryStatUnit": "ms"
        },
        "edges": {
          "mainStatUnit": "rps",
          "secondaryStatUnit": "ms"
        }
      }
    },
    {
      "id": 7,
      "title": "üéØ Performance Alerts & Recommendations",
      "type": "text",
      "gridPos": {"h": 6, "w": 24, "x": 0, "y": 34},
      "options": {
        "content": "## üîç Performance Analysis Guidelines\n\n### üö® **Critical Thresholds:**\n- **Latency**: P95 > 1s requires immediate attention\n- **Error Rate**: > 5% indicates service issues\n- **CPU**: > 80% sustained usage\n- **Memory**: > 90% usage risk\n\n### üìä **Optimization Priorities:**\n1. **Red zones** in tables = immediate action needed\n2. **High correlation** between resource usage and latency\n3. **Database queries** > 100ms should be optimized\n4. **Memory leaks** shown by continuously increasing memory\n\n### üõ†Ô∏è **Quick Actions:**\n- Click on any metric to drill down to traces\n- Use Tempo trace view for detailed request analysis\n- Check logs panel for error context\n- Monitor trends over time for capacity planning",
        "mode": "markdown"
      }
    }
  ],
  "time": {"from": "now-1h", "to": "now"},
  "refresh": "30s",
  "version": 1,
  "editable": true
}