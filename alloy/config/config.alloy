// ===== LOGGING SECTION =====
// Discovery for Docker containers
discovery.docker "containers" {
  host = "unix:///var/run/docker.sock"
}

// Loki logging configuration
loki.source.docker "containers" {
  host       = "unix:///var/run/docker.sock"
  targets    = discovery.docker.containers.targets
  forward_to = [loki.write.local_loki.receiver]
}

loki.write "local_loki" {
  endpoint {
    url = "http://loki:3100/loki/api/v1/push"
  }
}

// ===== METRICS SECTION =====
// Node Exporter metrics
prometheus.scrape "node" {
  targets = [{"__address__" = "node-exporter:9100"}]
  forward_to = [prometheus.remote_write.local_prometheus.receiver]
  job_name = "node"
  scrape_interval = "15s"
}

// cAdvisor container metrics
prometheus.scrape "cadvisor" {
  targets = [{"__address__" = "cadvisor:8080"}]
  forward_to = [prometheus.remote_write.local_prometheus.receiver]
  job_name = "cadvisor"
  scrape_interval = "15s"
  metrics_path = "/metrics"
}

// PostgreSQL Exporter
prometheus.scrape "postgres" {
  targets = [{"__address__" = "postgres-exporter:9187"}]
  forward_to = [prometheus.remote_write.local_prometheus.receiver]
  job_name = "postgres"
  scrape_interval = "15s"
}

// Redis Exporter
prometheus.scrape "redis" {
  targets = [{"__address__" = "redis-exporter:9121"}]
  forward_to = [prometheus.remote_write.local_prometheus.receiver]
  job_name = "redis"
  scrape_interval = "15s"
}

// Prometheus itself
prometheus.scrape "prometheus" {
  targets = [{"__address__" = "prometheus:9090"}]
  forward_to = [prometheus.remote_write.local_prometheus.receiver]
  job_name = "prometheus"
  scrape_interval = "15s"
}

// Grafana metrics
prometheus.scrape "grafana" {
  targets = [{"__address__" = "grafana:3000"}]
  forward_to = [prometheus.remote_write.local_prometheus.receiver]
  job_name = "grafana"
  scrape_interval = "15s"
  metrics_path = "/metrics"
}

// Loki metrics
prometheus.scrape "loki" {
  targets = [{"__address__" = "loki:3100"}]
  forward_to = [prometheus.remote_write.local_prometheus.receiver]
  job_name = "loki"
  scrape_interval = "15s"
  metrics_path = "/metrics"
}

// Tempo metrics
prometheus.scrape "tempo" {
  targets = [{"__address__" = "tempo:3200"}]
  forward_to = [prometheus.remote_write.local_prometheus.receiver]
  job_name = "tempo"
  scrape_interval = "15s"
  metrics_path = "/metrics"
}

// Alertmanager metrics
prometheus.scrape "alertmanager" {
  targets = [{"__address__" = "alertmanager:9093"}]
  forward_to = [prometheus.remote_write.local_prometheus.receiver]
  job_name = "alertmanager"
  scrape_interval = "15s"
  metrics_path = "/metrics"
}

// Local Prometheus write
prometheus.remote_write "local_prometheus" {
  endpoint {
    url = "http://prometheus:9090/api/v1/write"
  }
}

// ===== TRACING SECTION =====
// Note: Traces are collected directly by Tempo
// Applications should send traces to:
// - OTLP: tempo:4317 (gRPC) or tempo:4318 (HTTP)
// - Jaeger: tempo:14268 (HTTP), tempo:14250 (gRPC), tempo:6832 (UDP), tempo:6831 (UDP)
// - Zipkin: tempo:9411 (HTTP)